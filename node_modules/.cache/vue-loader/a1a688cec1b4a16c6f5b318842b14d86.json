{"remainingRequest":"D:\\GH_Portfolio\\ex13\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GH_Portfolio\\ex13\\src\\components\\pushnotify_page.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GH_Portfolio\\ex13\\src\\components\\pushnotify_page.vue","mtime":1614094180736},{"path":"D:\\GH_Portfolio\\ex13\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GH_Portfolio\\ex13\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GH_Portfolio\\ex13\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GH_Portfolio\\ex13\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc1RpdGxlOiAnJywgLy8g7KCc66qp7J2EIOyggOyepe2VoCDsnoTsi5wg67OA7IiYCiAgICAgIHNNc2c6ICcnIC8vIOuCtOyaqeydhCDsoIDsnqXtlaAg7J6E7IucIOuzgOyImAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZm5TZW5kUHVzaCgpIHsKICAgICAgLy8g67Cc7Iah7ZWgIOuCtOyaqSBKU09OIO2YleyLneycvOuhnCDrs4Dqsr0KICAgICAgY29uc3QgUHJlcGFyZWREYXRhID0gSlNPTi5zdHJpbmdpZnkoewogICAgICAgIHBUaXRsZTogdGhpcy5zVGl0bGUsCiAgICAgICAgcE1zZzogdGhpcy5zTXNnCiAgICAgIH0pCiAgICAgIC8vIO2MjOydtOyWtOyKpO2GoOyWtCDtlajsiJgg7Iuk7ZaJCiAgICAgIGZldGNoKCdodHRwczovL3VzLWNlbnRyYWwxLXB3YS1ub3RpZmljYXRpb24tcHVzaC5jbG91ZGZ1bmN0aW9ucy5uZXQvc3RvcmVQdXNoRGF0YScsIHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfSwKICAgICAgICBib2R5OiBQcmVwYXJlZERhdGEKICAgICAgfSkuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKCfsmKTrpZghJyArIGVyci5tZXNzYWdlKSk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["pushnotify_page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pushnotify_page.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row wrap>\r\n      <!-- 상단에 제목 표시 -->\r\n      <v-col cols=\"12\" class=\"text-center\">\r\n        <h1 class=\"display-1\">메시지 보내기</h1>\r\n      </v-col>\r\n      <v-col class=\"my-3\" offset=\"1\" cols=\"10\">\r\n        <!-- 카드 UI 안에 입력 컨트롤 배치 -->\r\n        <v-card color=\"blue-grey lighten-1\" dark>\r\n          <!-- 중간 영역에 제목과 내용 입력 받음 -->\r\n          <v-container class=\"my-3\">\r\n            <!-- 한 행에 하나의 항목 표시를 위해 column 어트리뷰트 사용 -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <v-text-field autofocus name=\"title\" label=\"제목\" type=\"text\" v-model=\"sTitle\" color=\"white\">\r\n                </v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\">\r\n                <!-- rows와 multi-line 어트리뷰트 사용으로 3줄 입력컨트롤로\r\n\t\t\t\t\t\t\t\t\t\t변경 -->\r\n                <v-textarea rows=\"3\" name=\"message\" label=\"내용\" type=\"text\" v-model=\"sMsg\" color=\"white\"></v-textarea>\r\n              </v-col>\r\n            </v-row>\r\n          </v-container>\r\n          <v-card-actions>\r\n            <!-- block 어트리뷰트 사용으로 하단에 발송 블록레벨 버튼 표시 -->\r\n            <v-btn block large color=\"orange\" dark @click=\"fnSendPush\">\r\n              <v-icon left>message</v-icon>발 송\r\n            </v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        sTitle: '', // 제목을 저장할 임시 변수\r\n        sMsg: '' // 내용을 저장할 임시 변수\r\n      }\r\n    },\r\n    methods: {\r\n      fnSendPush() {\r\n        // 발송할 내용 JSON 형식으로 변경\r\n        const PreparedData = JSON.stringify({\r\n          pTitle: this.sTitle,\r\n          pMsg: this.sMsg\r\n        })\r\n        // 파이어스토어 함수 실행\r\n        fetch('https://us-central1-pwa-notification-push.cloudfunctions.net/storePushData', {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          body: PreparedData\r\n        }).catch(err => console.log('오류!' + err.message));\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}